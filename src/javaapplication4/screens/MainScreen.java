/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication4.screens;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.UnknownHostException;
import javaapplication4.HtmlDoc;
import javaapplication4.HttpRequest;
import javaapplication4.HttpResponse;
import javaapplication4.Session;
import javax.swing.ImageIcon;

import javax.swing.event.HyperlinkEvent;

/**
 *
 * @author aluno
 */
public class MainScreen extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public MainScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainScreen = new javax.swing.JScrollPane();
        htmlViewer = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        reloadBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        fowardBtn = new javax.swing.JButton();
        btnGo = new javax.swing.JButton();
        navigationField = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        sourceCodeMenu = new javax.swing.JMenuItem();
        responseRecordMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Navegador Web");
        setIconImage(new ImageIcon(getClass().getResource("/javaapplication4/assets/icon.png")).getImage());
        setMaximumSize(new java.awt.Dimension(2, 2147483647));

        htmlViewer.setEditable(false);
        htmlViewer.setBorder(null);
        htmlViewer.setContentType("text/html"); // NOI18N
        htmlViewer.addHyperlinkListener(new javax.swing.event.HyperlinkListener() {
            public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {
                htmlViewerHyperlinkUpdate(evt);
            }
        });
        mainScreen.setViewportView(htmlViewer);

        jPanel1.setFocusable(false);
        jPanel1.setMaximumSize(new java.awt.Dimension(32767, 37));

        reloadBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication4/assets/reload.png"))); // NOI18N
        reloadBtn.setPreferredSize(new java.awt.Dimension(518, 519));
        reloadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadBtnActionPerformed(evt);
            }
        });

        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication4/assets/back_arrow.png"))); // NOI18N
        backBtn.setEnabled(false);
        backBtn.setPreferredSize(new java.awt.Dimension(518, 519));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        fowardBtn.setIcon(
                new javax.swing.ImageIcon(getClass().getResource("/javaapplication4/assets/foward_arrow.png"))); // NOI18N
        fowardBtn.setEnabled(false);
        fowardBtn.setPreferredSize(new java.awt.Dimension(518, 519));
        fowardBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fowardBtnActionPerformed(evt);
            }
        });

        btnGo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication4/assets/go_arrow.png"))); // NOI18N
        btnGo.setPreferredSize(new java.awt.Dimension(518, 519));
        btnGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoActionPerformed(evt);
            }
        });

        navigationField.setMaximumSize(new java.awt.Dimension(2147483647, 25));
        navigationField.setPreferredSize(new java.awt.Dimension(64, 25));
        navigationField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                navigationFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fowardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reloadBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(navigationField, javax.swing.GroupLayout.DEFAULT_SIZE, 629,
                                        Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGo, javax.swing.GroupLayout.PREFERRED_SIZE, 25,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap()));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(navigationField, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnGo, javax.swing.GroupLayout.PREFERRED_SIZE, 25,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(backBtn, javax.swing.GroupLayout.Alignment.TRAILING,
                                                javax.swing.GroupLayout.PREFERRED_SIZE, 25,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(fowardBtn, javax.swing.GroupLayout.Alignment.TRAILING,
                                                javax.swing.GroupLayout.PREFERRED_SIZE, 25,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(reloadBtn, javax.swing.GroupLayout.Alignment.TRAILING,
                                                javax.swing.GroupLayout.PREFERRED_SIZE, 25,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap()));

        jMenu1.setText("Ver");

        sourceCodeMenu.setText("Código-Fonte da página");
        sourceCodeMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceCodeMenuActionPerformed(evt);
            }
        });
        jMenu1.add(sourceCodeMenu);

        responseRecordMenu.setText("Histórico de respostas");
        responseRecordMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                responseRecordMenuActionPerformed(evt);
            }
        });
        jMenu1.add(responseRecordMenu);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mainScreen, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(mainScreen, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void responseRecordMenuActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_responseRecordMenuActionPerformed
        FResponseRecord fResponseRecord = new FResponseRecord();

        fResponseRecord.setResponseRecord(Session.getResponseRecord().toString());

        fResponseRecord.setVisible(true);
    }// GEN-LAST:event_responseRecordMenuActionPerformed

    private void sourceCodeMenuActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_sourceCodeMenuActionPerformed
        if (Session.getCurrentPageURL() == null)
            return;

        FSourceCode fSourceCode = new FSourceCode();

        fSourceCode.setOriginalSourceCode(Session.getCurrentSourceCode());
        fSourceCode.setConvertedSourceCode(htmlViewer.getText());

        fSourceCode.setVisible(true);
    }// GEN-LAST:event_sourceCodeMenuActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_backBtnActionPerformed
        URL url = Session.getBackStack().pop(); // Pega a URL da página anterior

        Session.getForwardStack().push(Session.getCurrentPageURL()); // Adiciona a página atual na pilha de avançar

        fowardBtn.setEnabled(true); // Habilita o botão de avançar

        if (Session.getBackStack().isEmpty()) {// Se a pilha de voltar estiver vazia
            backBtn.setEnabled(false); // Desabilita o botão de voltar
        }

        navigate(url.toString()); // Navega para a página anterior
    }// GEN-LAST:event_backBtnActionPerformed

    private void fowardBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_fowardBtnActionPerformed
        URL url = Session.getForwardStack().pop(); // Pega a URL da página seguinte

        Session.getBackStack().push(Session.getCurrentPageURL()); // Adiciona a página atual na pilha de voltar

        backBtn.setEnabled(true); // Habilita o botão de voltar

        if (Session.getForwardStack().isEmpty()) {// Se a pilha de avançar estiver vazia
            fowardBtn.setEnabled(false); // Desabilita o botão de avançar
        }

        navigate(url.toString()); // Navega para a página seguinte
    }// GEN-LAST:event_fowardBtnActionPerformed

    private void reloadBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_reloadBtnActionPerformed
        if (Session.getCurrentPageURL() != null) {
            navigate(Session.getCurrentPageURL().toString());
        }
    }// GEN-LAST:event_reloadBtnActionPerformed

    private void htmlViewerHyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {// GEN-FIRST:event_htmlViewerHyperlinkUpdate
        if (evt.getEventType() != HyperlinkEvent.EventType.ACTIVATED)
            return;

        URL url = evt.getURL(); // Pega a URL do link clicado
        if (url == null) { // Se o link for relativo
            try { // Cria uma URL absoluta
                url = new URL(Session.getCurrentPageURL(), evt.getDescription());
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        Session.getBackStack().push(Session.getCurrentPageURL()); // Adiciona a página atual na pilha de voltar
        Session.getForwardStack().clear(); // Limpa a pilha de avançar

        fowardBtn.setEnabled(false); // Desabilita o botão de avançar
        backBtn.setEnabled(true); // Habilita o botão de voltar

        navigate(url.toString());
    }// GEN-LAST:event_htmlViewerHyperlinkUpdate

    private void btnGoActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnGoActionPerformed
        goToPage();
    }// GEN-LAST:event_btnGoActionPerformed

    private void navigationFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_navigationFieldActionPerformed
        goToPage();
    }// GEN-LAST:event_navigationFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    private void navigate(String url) {
        // Tenta fazer a requisição a partir da URL passada
        try {
            HttpResponse response = HttpRequest.makeRequestPage(url); // Faz a requisição

            Session.setCurrentSourceCode(response.getBody()); // Atualiza o código-fonte da página atual
            htmlViewer.setText(HtmlDoc.toHtml3_2(response.getBody())); // Exibe o corpo da resposta
            navigationField.setText(response.getURL().toString()); // Atualiza o campo de navegação (para o caso de
                                                                   // redirecionamento)
            Session.setCurrentPageURL(response.getURL()); // Atualiza a URL da página atual

            // Caso o host não exista
        } catch (UnknownHostException e) {
            e.printStackTrace();

            htmlViewer.setText("<h1>O endereço passado não corresponde a nenhum host.</h1>");
        } catch (IOException e) {
            e.printStackTrace();

            htmlViewer.setText("<h1>Não foi possível acessar</h1>");
        }
    }

    private void goToPage() {
        String url = navigationField.getText(); // Pega a URL digitada

        if (Session.getCurrentPageURL() != null) {
            Session.getBackStack().push(Session.getCurrentPageURL()); // Adiciona a página atual na pilha de voltar
            Session.getForwardStack().clear(); // Limpa a pilha de avançar

            fowardBtn.setEnabled(false); // Desabilita o botão de avançar
            backBtn.setEnabled(true); // Habilita o botão de voltar
        }

        navigate(url);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton btnGo;
    private javax.swing.JButton fowardBtn;
    private javax.swing.JEditorPane htmlViewer;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane mainScreen;
    private javax.swing.JTextField navigationField;
    private javax.swing.JButton reloadBtn;
    private javax.swing.JMenuItem responseRecordMenu;
    private javax.swing.JMenuItem sourceCodeMenu;
    // End of variables declaration//GEN-END:variables
}
